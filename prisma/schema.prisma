generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(255)
  email        String        @unique @db.VarChar(255)
  password     String        @db.VarChar(255)
  token        String?       @db.VarChar(255)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  categories   Category[]
  transactions Transaction[]
  wallet       Wallet[]

  @@map("users")
}

model MasterCategoryTransaction {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  categories Category[]

  @@map("master_category_transactions")
}

model Category {
  id                          Int                       @id @default(autoincrement())
  name                        String                    @db.VarChar(255)
  userId                      Int
  masterCategoryTransactionId Int
  createdAt                   DateTime                  @default(now())
  updatedAt                   DateTime                  @updatedAt
  masterCategoryTransaction   MasterCategoryTransaction @relation(fields: [masterCategoryTransactionId], references: [id])
  user                        User                      @relation(fields: [userId], references: [id])
  subCategories               SubCategory[]
  transactions                Transaction[]

  @@map("categories")
}

model SubCategory {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(255)
  categoryId   Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  category     Category      @relation(fields: [categoryId], references: [id])
  transactions Transaction[]

  @@map("sub_categories")
}

model Wallet {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(255)
  balance      BigInt
  userId       Int           @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  user         User          @relation(fields: [userId], references: [id])

  @@map("wallets")
}

model Transaction {
  id            Int          @id @default(autoincrement())
  amount        BigInt
  date          DateTime
  userId        Int
  walletId      Int
  subCategoryId Int?
  categoryId    Int
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  description   String       @db.VarChar(255)
  category      Category     @relation(fields: [categoryId], references: [id])
  subCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  user          User         @relation(fields: [userId], references: [id])
  wallet        Wallet       @relation(fields: [walletId], references: [id])

  @@map("transactions")
}
